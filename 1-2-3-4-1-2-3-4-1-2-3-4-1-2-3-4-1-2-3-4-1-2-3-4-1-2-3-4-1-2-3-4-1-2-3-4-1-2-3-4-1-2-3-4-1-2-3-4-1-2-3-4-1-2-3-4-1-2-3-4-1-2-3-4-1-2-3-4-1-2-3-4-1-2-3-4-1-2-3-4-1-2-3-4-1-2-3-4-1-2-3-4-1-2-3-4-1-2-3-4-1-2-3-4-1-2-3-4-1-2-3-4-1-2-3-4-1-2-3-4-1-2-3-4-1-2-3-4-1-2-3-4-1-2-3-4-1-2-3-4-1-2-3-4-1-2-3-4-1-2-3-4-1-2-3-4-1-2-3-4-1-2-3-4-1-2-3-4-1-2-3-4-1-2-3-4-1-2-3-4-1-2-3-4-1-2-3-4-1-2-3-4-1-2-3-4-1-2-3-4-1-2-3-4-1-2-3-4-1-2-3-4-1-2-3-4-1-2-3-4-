
print("Test 1 Passed")
getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
	Name = "Universe Universal",
	LoadingTitle = "Loading in progress...",
	LoadingSubtitle = "Scripted By Fire OfficialDC Tested By Mi_aio and dreamurrd",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = true,
		FileName = "Universe Universal"
	},
        Discord = {
        	Enabled = true,
        	Invite = "https://discord.com/invite/Af3fQxbgED",
        	RememberJoins = true
        },
	KeySystem = true,
	KeySettings = {
		Title = "Universe Universal KeySytem",
		Subtitle = "Key System",
		Note = "Join the discord server for the key https://discord.com/invite/Af3fQxbgED",
		FileName = "UniverseUniversal",
		SaveKey = true,
		GrabKeyFromSite = true,
		Key = "https://pastebin.com/raw/57uXpGyv"
	}
})

local AimTab = Window:CreateTab("Aim", 4483362458)
local Section = AimTab:CreateSection("Aim")

local Button = AimTab:CreateButton({
	Name = "Aimbot",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkWareV2/1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4/main/Exstras/Aimbot.Lua'))()
	end,
})

local Button = AimTab:CreateButton({
	Name = "Aimbot Team Check",
	Callback = function()
		loadstring(game:HttpGet('https://raw.githubusercontent.com/DarkWareV2/1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4-1-2-3-4/main/Exstras/AimbotTeamCheck.Lua'))()
	end,
})

local LocalPlayerTab = Window:CreateTab("Local Player", 4483362458)
local Section = LocalPlayerTab:CreateSection("Humanoid")

local Slider = LocalPlayerTab:CreateSlider({
    Name = "WalkSpeed",
    Range = {16, 500},
    Increment = 1,
    Suffix = "WalkSpeed",
    CurrentValue = 16,
    Flag = "Slider1",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player and player.Character
        local humanoid = character and character:FindFirstChild("Humanoid")

        if humanoid then
            humanoid.WalkSpeed = Value
        end
    end,
})

game.Players.LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    local humanoid = newCharacter:WaitForChild("Humanoid")
    humanoid.WalkSpeed = Slider.CurrentValue -- Set to current slider value on respawn
end)

local JumpHeightSlider = LocalPlayerTab:CreateSlider({
    Name = "JumpHeight",
    Range = {16, 1000},
    Increment = 1,
    Suffix = "Studs",
    CurrentValue = 50,
    Flag = "Slider2",
    Callback = function(Value)
        local player = game.Players.LocalPlayer
        local character = player and player.Character
        local humanoid = character and character:FindFirstChild("Humanoid")

        if humanoid then
            humanoid.JumpPower = Value
        end
    end,
})

game.Players.LocalPlayer.CharacterAdded:Connect(function(newCharacter)
    local humanoid = newCharacter:WaitForChild("Humanoid")
    humanoid.JumpPower = JumpHeightSlider.CurrentValue -- Set to current slider value on respawn
end)

local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = workspace.CurrentCamera

local flying = false
local speed = 0.5
local bp, bg

local function startFlying()
	flying = true

	bp = Instance.new("BodyPosition")
	bp.MaxForce = Vector3.new(400000, 400000, 400000)
	bp.D = 10
	bp.P = 10000
	bp.Parent = humanoidRootPart

	bg = Instance.new("BodyGyro")
	bg.MaxTorque = Vector3.new(400000, 400000, 400000)
	bg.D = 10
	bg.Parent = humanoidRootPart

	rs.RenderStepped:Connect(function()
		if flying then
			bp.Position = humanoidRootPart.Position + ((humanoidRootPart.Position - camera.CFrame.p).unit * speed)
			bg.CFrame = CFrame.new(camera.CFrame.p, humanoidRootPart.Position)
		end
	end)
end

local function stopFlying()
	if bp then
		bp:Destroy()
		bp = nil
	end
	if bg then
		bg:Destroy()
		bg = nil
	end
	flying = false
end

local Toggle = LocalPlayerTab:CreateToggle({
	Name = "Cframe Fly",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = function(Value)
		if Value then
			if not flying then
				startFlying()
			end
		else
			if flying then
				stopFlying()
			end
		end
	end,
})

local VisualsTab = Window:CreateTab("Visuals", 4483362458)
local Section = LocalPlayerTab:CreateSection("Esp Section")



local names = false
local Holder

local function initializeESP()
    _G.FriendColor = Color3.fromRGB(0, 0, 255)
    _G.EnemyColor = Color3.fromRGB(255, 0, 0)
    _G.UseTeamColor = true

    Holder = Instance.new("Folder", game.CoreGui)
    Holder.Name = "ESP"

    local Box = Instance.new("BoxHandleAdornment")
    Box.Name = "nilBox"
    Box.Size = Vector3.new(1, 2, 1)
    Box.Color3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
    Box.Transparency = 0.7
    Box.ZIndex = 0
    Box.AlwaysOnTop = false
    Box.Visible = false

    local NameTag = Instance.new("BillboardGui")
    NameTag.Name = "nilNameTag"
    NameTag.Enabled = false
    NameTag.Size = UDim2.new(0, 200, 0, 50)
    NameTag.AlwaysOnTop = true
    NameTag.StudsOffset = Vector3.new(0, 1.8, 0)
    local Tag = Instance.new("TextLabel", NameTag)
    Tag.Name = "Tag"
    Tag.BackgroundTransparency = 1
    Tag.Position = UDim2.new(0, -50, 0, 0)
    Tag.Size = UDim2.new(0, 300, 0, 20)
    Tag.TextSize = 15
    Tag.TextColor3 = Color3.new(100 / 255, 100 / 255, 100 / 255)
    Tag.TextStrokeColor3 = Color3.new(0 / 255, 0 / 255, 0 / 255)
    Tag.TextStrokeTransparency = 0.4
    Tag.Text = "nil"
    Tag.Font = Enum.Font.SourceSansBold
    Tag.TextScaled = false

    local function LoadCharacter(v)
        repeat wait() until v.Character ~= nil
        v.Character:WaitForChild("Humanoid")
        local vHolder = Holder:FindFirstChild(v.Name)
        if not vHolder then
            vHolder = Instance.new("Folder", Holder)
            vHolder.Name = v.Name
        end
        vHolder:ClearAllChildren()
        local b = Box:Clone()
        b.Name = v.Name .. "Box"
        b.Adornee = v.Character
        b.Parent = vHolder
        local t = NameTag:Clone()
        t.Name = v.Name .. "NameTag"
        t.Enabled = true
        t.Parent = vHolder
        t.Adornee = v.Character:WaitForChild("Head", 5)
        if not t.Adornee then
            return UnloadCharacter(v)
        end
        t.Tag.Text = v.Name
        b.Color3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
        t.Tag.TextColor3 = Color3.new(v.TeamColor.r, v.TeamColor.g, v.TeamColor.b)
        local Update
        local UpdateNameTag = function()
            if not pcall(function()
                v.Character.Humanoid.DisplayDistanceType = Enum.HumanoidDisplayDistanceType.None
                local maxh = math.floor(v.Character.Humanoid.MaxHealth)
                local h = math.floor(v.Character.Humanoid.Health)
            end) then
                Update:Disconnect()
            end
        end
        UpdateNameTag()
        Update = v.Character.Humanoid.Changed:Connect(UpdateNameTag)
    end

    local function UnloadCharacter(v)
        local vHolder = Holder:FindFirstChild(v.Name)
        if vHolder then
            vHolder:ClearAllChildren()
        end
    end

    local function LoadPlayer(v)
        local vHolder = Instance.new("Folder", Holder)
        vHolder.Name = v.Name
        v.CharacterAdded:Connect(function()
            pcall(LoadCharacter, v)
        end)
        v.CharacterRemoving:Connect(function()
            pcall(UnloadCharacter, v)
        end)
        v.Changed:Connect(function(prop)
            if prop == "TeamColor" then
                UnloadCharacter(v)
                wait()
                LoadCharacter(v)
            end
        end)
        LoadCharacter(v)
    end

    local function UnloadPlayer(v)
        UnloadCharacter(v)
        local vHolder = Holder:FindFirstChild(v.Name)
        if vHolder then
            vHolder:Destroy()
        end
    end

    for i, v in pairs(game:GetService("Players"):GetPlayers()) do
        spawn(function() pcall(LoadPlayer, v) end)
    end

    game:GetService("Players").PlayerAdded:Connect(function(v)
        pcall(LoadPlayer, v)
    end)

    game:GetService("Players").PlayerRemoving:Connect(function(v)
        pcall(UnloadPlayer, v)
    end)

    game:GetService("Players").LocalPlayer.NameDisplayDistance = 0

    if _G.Reantheajfdfjdgs then
        return
    end

    _G.Reantheajfdfjdgs = ":suifayhgvsdghfsfkajewfrhk321rk213kjrgkhj432rj34f67df"

    local players = game:GetService("Players")
    local plr = players.LocalPlayer

    local function esp(target, color)
        if target.Character then
            if not target.Character:FindFirstChild("GetReal") then
                local highlight = Instance.new("Highlight")
                highlight.RobloxLocked = true
                highlight.Name = "GetReal"
                highlight.Adornee = target.Character
                highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                highlight.FillColor = color
                highlight.Parent = target.Character
            else
                target.Character.GetReal.FillColor = color
            end
        end
    end

    spawn(function()
        while names do
            for i, v in pairs(players:GetPlayers()) do
                if v ~= plr then
                    esp(v, _G.UseTeamColor and v.TeamColor.Color or ((plr.TeamColor == v.TeamColor) and _G.FriendColor or _G.EnemyColor))
                end
            end
            task.wait()
        end
    end)
end

-- Toggle Script
local Toggle = VisualsTab:CreateToggle({
    Name = "Names",
    CurrentValue = false,
    Flag = "Toggle5", -- Flag to identify this toggle
    Callback = function(Value)
        names = Value
        if names then
            if not Holder then
                initializeESP()
            end
        else
            if Holder then
                Holder:Destroy()
                Holder = nil
            end
        end
    end,
})


local espEnabled = false

local Toggle = VisualsTab:CreateToggle({
    Name = "Box",
    CurrentValue = false,
    Flag = "Toggle2",
    Callback = function(Value)
        espEnabled = Value
        if not espEnabled then
            for _, drawings in pairs(espCache) do
                drawings.box.Visible = false
                drawings.boxoutline.Visible = false
            end
        end
    end,
})

local settings = {
    defaultcolor = Color3.fromRGB(255, 0, 0),
    teamcheck = false,
    teamcolor = true
}

local runService = game:GetService("RunService")
local players = game:GetService("Players")

local localPlayer = players.LocalPlayer
local camera = workspace.CurrentCamera

local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new
local tan, rad = math.tan, math.rad
local round = function(...) local a = {} for i, v in next, table.pack(...) do a[i] = math.round(v) end return unpack(a) end
local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end

local espCache = {}

local function createEsp(player)
    local drawings = {}
    
    drawings.box = newDrawing("Square")
    drawings.box.Thickness = 1
    drawings.box.Filled = false
    drawings.box.Color = settings.defaultcolor
    drawings.box.Visible = false
    drawings.box.ZIndex = 2

    drawings.boxoutline = newDrawing("Square")
    drawings.boxoutline.Thickness = 3
    drawings.boxoutline.Filled = false
    drawings.boxoutline.Color = newColor3()
    drawings.boxoutline.Visible = false
    drawings.boxoutline.ZIndex = 1

    espCache[player] = drawings
end

local function removeEsp(player)
    if rawget(espCache, player) then
        for _, drawing in next, espCache[player] do
            drawing:Remove()
        end
        espCache[player] = nil
    end
end

local function updateEsp(player, esp)
    if not espEnabled then
        esp.box.Visible = false
        esp.boxoutline.Visible = false
        return
    end

    local character = player and player.Character
    if character then
        local cframe = character:GetModelCFrame()
        local position, visible, depth = wtvp(cframe.Position)
        esp.box.Visible = visible
        esp.boxoutline.Visible = visible

        if cframe and visible then
            local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000
            local width, height = round(4 * scaleFactor, 5 * scaleFactor)
            local x, y = round(position.X, position.Y)

            esp.box.Size = newVector2(width, height)
            esp.box.Position = newVector2(round(x - width / 2, y - height / 2))
            esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor

            esp.boxoutline.Size = esp.box.Size
            esp.boxoutline.Position = esp.box.Position
        end
    else
        esp.box.Visible = false
        esp.boxoutline.Visible = false
    end
end

for _, player in next, players:GetPlayers() do
    if player ~= localPlayer then
        createEsp(player)
    end
end

players.PlayerAdded:Connect(function(player)
    createEsp(player)
end)

players.PlayerRemoving:Connect(function(player)
    removeEsp(player)
end)

runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
    for player, drawings in next, espCache do
        if settings.teamcheck and player.Team == localPlayer.Team then
            continue
        end

        if drawings and player ~= localPlayer then
            updateEsp(player, drawings)
        end
    end
end)




print("Test 2 Passed")
Rayfield:LoadConfiguration()
