getgenv().SecureMode = true
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
	Name = "Universe Universal only for cats like mr pi something",
	LoadingTitle = "Loading in progress...",
	LoadingSubtitle = "Scripted By Fire OfficialDC Tested By Mi_aio",
	ConfigurationSaving = {
		Enabled = true,
		FolderName = true,
		FileName = "Universe Universal"
	},
        Discord = {
        	Enabled = true,
        	Invite = "https://discord.com/invite/Af3fQxbgED",
        	RememberJoins = true
        },
	KeySystem = true,
	KeySettings = {
		Title = "Universe Universal KeySytem",
		Subtitle = "Key System",
		Note = "Join the discord server for the key https://discord.com/invite/Af3fQxbgED",
		FileName = "UniverseUniversal",
		SaveKey = false,
		GrabKeyFromSite = true,
		Key = "https://pastebin.com/raw/57uXpGyv"
	}
})

local LocalPlayerTab = Window:CreateTab("Local Player", 4483362458)
local Section = LocalPlayerTab:CreateSection("Humanoid")

local Slider = LocalPlayerTab:CreateSlider({
	Name = "WalkSpeed",
	Range = {0, 500},
	Increment = 1,
	Suffix = "WalkSpeed",
	CurrentValue = 16,
	Flag = "Slider1",
	Callback = function(Value)
		local player = game.Players.LocalPlayer
		local character = player and player.Character
		local humanoid = character and character:FindFirstChild("Humanoid")
		
		if humanoid then
			humanoid.WalkSpeed = Value
		end
	end,
})

local JumpHeightSlider = LocalPlayerTab:CreateSlider({
	Name = "JumpHeight",
	Range = {0, 200},
	Increment = 1,
	Suffix = "Studs",
	CurrentValue = 50,
	Flag = "Slider2",
	Callback = function(Value)
		local player = game.Players.LocalPlayer
		local character = player and player.Character
		local humanoid = character and character:FindFirstChild("Humanoid")
		
		if humanoid then
			humanoid.JumpPower = Value
		end
	end,
})


local uis = game:GetService("UserInputService")
local rs = game:GetService("RunService")

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local camera = workspace.CurrentCamera

local flying = false
local speed = 0.5
local bp, bg

local function startFlying()
	flying = true

	bp = Instance.new("BodyPosition")
	bp.MaxForce = Vector3.new(400000, 400000, 400000)
	bp.D = 10
	bp.P = 10000
	bp.Parent = humanoidRootPart

	bg = Instance.new("BodyGyro")
	bg.MaxTorque = Vector3.new(400000, 400000, 400000)
	bg.D = 10
	bg.Parent = humanoidRootPart

	rs.RenderStepped:Connect(function()
		if flying then
			bp.Position = humanoidRootPart.Position + ((humanoidRootPart.Position - camera.CFrame.p).unit * speed)
			bg.CFrame = CFrame.new(camera.CFrame.p, humanoidRootPart.Position)
		end
	end)
end

local function stopFlying()
	if bp then
		bp:Destroy()
		bp = nil
	end
	if bg then
		bg:Destroy()
		bg = nil
	end
	flying = false
end

local Toggle = LocalPlayerTab:CreateToggle({
	Name = "Cframe Fly",
	CurrentValue = false,
	Flag = "Toggle1",
	Callback = function(Value)
		if Value then
			if not flying then
				startFlying()
			end
		else
			if flying then
				stopFlying()
			end
		end
	end,
})

local VisualsTab = Window:CreateTab("Visuals", 4483362458)
local Section = LocalPlayerTab:CreateSection("Esp Section")

local espEnabled = false

local Toggle = VisualsTab:CreateToggle({
    Name = "Box",
    CurrentValue = false,
    Flag = "Toggle2",
    Callback = function(Value)
        espEnabled = Value
        if not espEnabled then
            for _, drawings in pairs(espCache) do
                drawings.box.Visible = false
                drawings.boxoutline.Visible = false
            end
        end
    end,
})

local settings = {
    defaultcolor = Color3.fromRGB(255, 0, 0),
    teamcheck = false,
    teamcolor = true
}

local runService = game:GetService("RunService")
local players = game:GetService("Players")

local localPlayer = players.LocalPlayer
local camera = workspace.CurrentCamera

local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new
local tan, rad = math.tan, math.rad
local round = function(...) local a = {} for i, v in next, table.pack(...) do a[i] = math.round(v) end return unpack(a) end
local wtvp = function(...) local a, b = camera.WorldToViewportPoint(camera, ...) return newVector2(a.X, a.Y), b, a.Z end

local espCache = {}

local function createEsp(player)
    local drawings = {}
    
    drawings.box = newDrawing("Square")
    drawings.box.Thickness = 1
    drawings.box.Filled = false
    drawings.box.Color = settings.defaultcolor
    drawings.box.Visible = false
    drawings.box.ZIndex = 2

    drawings.boxoutline = newDrawing("Square")
    drawings.boxoutline.Thickness = 3
    drawings.boxoutline.Filled = false
    drawings.boxoutline.Color = newColor3()
    drawings.boxoutline.Visible = false
    drawings.boxoutline.ZIndex = 1

    espCache[player] = drawings
end

local function removeEsp(player)
    if rawget(espCache, player) then
        for _, drawing in next, espCache[player] do
            drawing:Remove()
        end
        espCache[player] = nil
    end
end

local function updateEsp(player, esp)
    if not espEnabled then
        esp.box.Visible = false
        esp.boxoutline.Visible = false
        return
    end

    local character = player and player.Character
    if character then
        local cframe = character:GetModelCFrame()
        local position, visible, depth = wtvp(cframe.Position)
        esp.box.Visible = visible
        esp.boxoutline.Visible = visible

        if cframe and visible then
            local scaleFactor = 1 / (depth * tan(rad(camera.FieldOfView / 2)) * 2) * 1000
            local width, height = round(4 * scaleFactor, 5 * scaleFactor)
            local x, y = round(position.X, position.Y)

            esp.box.Size = newVector2(width, height)
            esp.box.Position = newVector2(round(x - width / 2, y - height / 2))
            esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor

            esp.boxoutline.Size = esp.box.Size
            esp.boxoutline.Position = esp.box.Position
        end
    else
        esp.box.Visible = false
        esp.boxoutline.Visible = false
    end
end

for _, player in next, players:GetPlayers() do
    if player ~= localPlayer then
        createEsp(player)
    end
end

players.PlayerAdded:Connect(function(player)
    createEsp(player)
end)

players.PlayerRemoving:Connect(function(player)
    removeEsp(player)
end)

runService:BindToRenderStep("esp", Enum.RenderPriority.Camera.Value, function()
    for player, drawings in next, espCache do
        if settings.teamcheck and player.Team == localPlayer.Team then
            continue
        end

        if drawings and player ~= localPlayer then
            updateEsp(player, drawings)
        end
    end
end)

-- Create the AimTab GUI and section
local AimTab = Window:CreateTab("Aim", 4483362458)
local Section = AimTab:CreateSection("Aim")


-- Configure the aim lock toggle
local Toggle = AimTab:CreateToggle({
    Name = "Aimlock",
    CurrentValue = false,
    Flag = "Toggle3", -- Unique identifier for the configuration, must be different from others if you're saving configurations
    Callback = function(Value)
        ENABLED = Value -- Set ENABLED based on the toggle status
    end,
})

-- Player and mouse references
local PLAYER = game.Players.LocalPlayer
local MOUSE = PLAYER:GetMouse()
local CC = game.Workspace.CurrentCamera

_G.AIM_AT = 'Head'
_G.FREE_FOR_ALL = true

-- Function to find the nearest player to the mouse cursor
function GetNearestPlayerToMouse()
    local PLAYERS = {}
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= PLAYER then
            table.insert(PLAYERS, player)
        end
    end
    
    local nearestPlayer = nil
    local closestDistance = math.huge
    
    -- Search for the nearest player, considering team color
    for _, player in pairs(PLAYERS) do
        if _G.FREE_FOR_ALL == false or (player.TeamColor ~= PLAYER.TeamColor) then
            local char = player.Character
            if char and char:FindFirstChild(_G.AIM_AT) then
                local targetPart = char[_G.AIM_AT]
                local distance = (targetPart.Position - CC.CFrame.Position).magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    nearestPlayer = player
                end
            end
        end
    end
    
    -- Return the nearest player or false if none were found
    return nearestPlayer
end

-- Connection to RenderStepped for aim locking functionality
game:GetService('RunService').RenderStepped:Connect(function()
    if ENABLED then
        local TARGET = GetNearestPlayerToMouse()
        if TARGET then
            local AIM = TARGET.Character:FindFirstChild(_G.AIM_AT)
            if AIM then
                CC.CFrame = CFrame.new(CC.CFrame.Position, AIM.Position)
            end
        end
    end
end)

Rayfield:LoadConfiguration()
